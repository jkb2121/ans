---
- name: Check to see if Wordpress Instance Exists
  stat: path="/var/www/{{ wordpress_instance_name }}"
  register: found_wordpress_dir

- name: Download WordPress
  get_url:
    url=https://wordpress.org/latest.tar.gz
    dest="/tmp/wordpress.tar.gz"
    validate_certs=no
  when: found_wordpress_dir.stat.exists == false

- name: Extract WordPress
  unarchive: src="/tmp/wordpress.tar.gz" dest=/var/www copy=no
  become: yes
  when: found_wordpress_dir.stat.exists == false

- name: Rename Wordpress Directory
  command: "mv /var/www/wordpress /var/www/{{ wordpress_instance_name }}"
  when: found_wordpress_dir.stat.exists == false

- name: Copy Apache Config File
  copy: src=default_wp.conf dest="/etc/apache2/sites-available/{{ wordpress_instance_name }}.conf" owner=root group=root
  when: found_wordpress_dir.stat.exists == false

# Uncomment for Wordpress_project-fix later
#- name: Update default Apache site
#  become: yes
#  lineinfile:
#    dest=/etc/apache2/sites-enabled/000-default.conf
#    regexp="(.)+DocumentRoot /var/www/html"
#    line="DocumentRoot /var/www/wordpress"
#  notify:
#    - restart apache

- name: Update Apache Config DocumentRoot
  become: yes
  lineinfile:
    dest="/etc/apache2/sites-available/{{ wordpress_instance_name }}.conf"
    regexp="(.)+DocumentRoot /var/www/html"
    line="DocumentRoot /var/www/{{ wordpress_instance_name }}"
  when: found_wordpress_dir.stat.exists == false

- name: Update Apache Config ServerName
  become: yes
  lineinfile:
    dest="/etc/apache2/sites-available/{{ wordpress_instance_name }}.conf"
    regexp="(.)+ServerName www.google.com"
    line="ServerName {{ wordpress_site_url }}"
  when: found_wordpress_dir.stat.exists == false

- name: Symlink to Enable and then Restart Apache
  file:
    src: "/etc/apache2/sites-available/{{ wordpress_instance_name }}.conf"
    dest: "/etc/apache2/sites-enabled/{{ wordpress_instance_name }}.conf"
    state: link
  when: found_wordpress_dir.stat.exists == false
  notify:
    - restart apache

# Backup of Copy config file.
#- name: Copy sample config file
#  command: mv /var/www/wordpress/wp-config-sample.php /var/www/wordpress/wp-config.php creates=/var/www/wordpress/wp-config.php
#  become: yes

- name: Copy sample config file
  command: mv "/var/www/{{ wordpress_instance_name }}/wp-config-sample.php" "/var/www/{{ wordpress_instance_name }}/wp-config.php" creates="/var/www/{{ wordpress_instance_name }}/wp-config.php"
  become: yes
  when: found_wordpress_dir.stat.exists == false

- name: Update WordPress config file
  lineinfile:
    dest="/var/www/{{ wordpress_instance_name }}/wp-config.php"
    regexp="{{ item.regexp }}"
    line="{{ item.line }}"
  with_items:
    - {'regexp': "define\\('DB_NAME', '(.)+'\\);", 'line': "define('DB_NAME', '{{wp_mysql_db}}');"}
    - {'regexp': "define\\('DB_USER', '(.)+'\\);", 'line': "define('DB_USER', '{{wp_mysql_user}}');"}
    - {'regexp': "define\\('DB_PASSWORD', '(.)+'\\);", 'line': "define('DB_PASSWORD', '{{wp_mysql_password}}');"}
  become: yes
  when: found_wordpress_dir.stat.exists == false

- name: Download SSH-FTP-Updater Support for Wordpress
  get_url:
    url=https://downloads.wordpress.org/plugin/ssh-sftp-updater-support.zip
    dest=/tmp/ssh-sftp-updater-support.zip
    validate_certs=no
  when: found_wordpress_dir.stat.exists == false

- name: Extract The SSH-FTP-Updater for Wordpress
  unarchive:
    src=/tmp/ssh-sftp-updater-support.zip
    dest="/var/www/{{ wordpress_instance_name }}/wp-content/plugins"
    copy=no
    owner=nobody
    group=www-data
    creates="/var/www/{{ wordpress_instance_name }}/wp-content/plugins/ssh-sftp-updater-support"
  become: yes
  when: found_wordpress_dir.stat.exists == false